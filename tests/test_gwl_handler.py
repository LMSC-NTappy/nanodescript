from nanodescript.describe_gwl_handler import GwlHandler
from nanodescript.describe_recipe_handler import DescribeRecipe
from nanodescript import describe_commands as cmds


class TestGwlHandler:
    def setup_class(self):
        self.t = GwlHandler()

    def test_init(self):
        assert len(self.t.gwl_commands) == 0

    def test_add_header(self):
        self.t.add_header()
        assert str(self.t.gwl_commands[0]).startswith("% File Generated by DesCRIPT")

    def test_add_configuration(self):
        r = DescribeRecipe()
        self.t.add_system_initialisation(r)
        assert str(self.t.gwl_commands[-2]).startswith("% System initialization")
        assert str(self.t.gwl_commands[-1]).startswith("InvertZAxis")

        self.t.add_writing_configuration(r)
        assert str(self.t.gwl_commands[-6]).startswith("% Writing configuration")
        assert str(self.t.gwl_commands[-5]).startswith("GalvoScanMode")
        assert str(self.t.gwl_commands[-4]).startswith("ContinuousMode")
        assert str(self.t.gwl_commands[-3]).startswith("PiezoSettlingTime")
        assert str(self.t.gwl_commands[-2]).startswith("GalvoAcceleration")
        assert str(self.t.gwl_commands[-1]).startswith("StageVelocity")

    def test_add_field_offsets(self):
        self.t.add_field_offsets()

        assert str(self.t.gwl_commands[-4]).startswith("% Scan field")
        assert str(self.t.gwl_commands[-3]).startswith("XOffset")
        assert str(self.t.gwl_commands[-2]).startswith("YOffset")
        assert str(self.t.gwl_commands[-1]).startswith("ZOffset")

    def test_add_writing_parameters(self):
        r = DescribeRecipe()
        self.t.add_writing_parameters(r)

        assert str(self.t.gwl_commands[-11]).startswith("% Writing parameters")

        cmdtypes = [type(x) for x in self.t.gwl_commands[-11:]]

        assert cmdtypes == [cmds.Comment,
                            cmds.PowerScaling,
                            cmds.Describe_empty,
                            cmds.Comment,
                            cmds.Describe_var,
                            cmds.Describe_var,
                            cmds.Describe_empty,
                            cmds.Comment,
                            cmds.Describe_var,
                            cmds.Describe_var,
                            cmds.Describe_var]
